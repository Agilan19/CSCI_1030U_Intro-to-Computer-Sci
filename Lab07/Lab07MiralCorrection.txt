// Lab07.cpp : Defines the entry point for the console application.
// Name: Agilan Ampigaipathar (100553054)
// Date: March 22, 2015
// Lab 07 - Object-Oriented Programming
//

#include "stdafx.h"
#include <iostream>
#include <math.h>
#include <string>
#include <vector>
#define PI 3.14159265358979323846

using namespace std;

//Make a class for Rectangle which represents a rectangle shape.
class Rectangle {

//The variables to be used within the class are public so they can be accessed elsewhere.
public:
	//Make the variables float as instructed.
	float width;
	float height;

	//Make the area and perimeter variables double for more accuracy.
	double area;
	double perimeter;

	//Make a function call of the class with the float variables as the arguments.
	Rectangle(float width, float height);

	//Declare the functions to be used specific to the Rectangle class. 
	double getArea();
	double getPerimeter();
private:
	double w;
	double h;
};

//Make a Circle class which represents a circle shape.
class Circle {

//The variables to be used within this class are also publicso they can be accessed elsewhere.
public:

	//Declare the variable for radius as a float variable as instructed. 
	float radius;

	//Make the area and perimeter variables double for more accuracy.
	double area;
	double perimeter;

	//Make a function call of the class with the float radius as an argument.
	Circle(float radius);

	//Declare te functions to be used specific to the Circle class. 
	double getArea();
	double getPerimeter();
};

/*
Make a function call linked directly to the Rectangle class in which the 
arguments are that of the Rectangle class. 
*/
Rectangle::Rectangle(float width, float height) {
	w = width;
	h = height;
}

//Calculate the area within the getArea function specific to the Rectangle class. 
double Rectangle::getArea() {

	//Calculate the area using the formula given on the assignment document.
	return (width * height);


}

//Calculate the perimeter within the getPerimeter function specific to the Rectangle class.
double Rectangle::getPerimeter() {

	//Calculate the perimeter using the formula given on the assignment document.
	double perimeter = ((width * 2) + (height * 2));
	
	/*
	Return the variable back to the Rectangle class function call so it could return the 
	calculation. 
	*/
	return perimeter;
}

//
Circle::Circle(float radius) {
	area = 0.0;
	perimeter = 0.0;
}

double Circle::getArea() {
	double area = (PI * (radius*radius));
	return area;
}

double Circle::getPerimeter() {
	double perimeter = (2 * (PI * radius));
	return perimeter;
}

class Shape : public Rectangle, public Circle {
public:
	void abc();
};

void Shape::abc(){


}

int _tmain(int argc, _TCHAR* argv[])
{

	Rectangle calculation1 (14.41, 17.25);
	calculation1.width = 41.0; 
	calculation1.height = 12.4;

	cout << "The Calculated Area of the Rectangle is: " << calculation1.getArea() << endl;

	Rectangle calculation2(15.2, 17.2);
	calculation2.width = 19.42;
	calculation2.height = 27.19;

	cout << "The Calculated Perimenter of the Rectangle is: " << calculation2.getPerimeter() << endl;

	cout << endl;

	Circle calculation3(35.41);
	calculation3.radius = 37.93;

	cout << "The Calculated Area of the Circle is: " << calculation3.getArea() << endl;

	Circle calculation4(21.78);
	calculation4.radius = 23.89;

	cout << "The Calculated Perimenter of the Circle is: " << calculation4.getPerimeter() << endl;

	cout << endl;
	vector<Rectangle> r;
	vector<Circle> c;

	Rectangle r1(2.1, 3.2);
	r1.width = 2.1;
	r1.height = 3.2;

	Rectangle r2(4.5, 1.5);
	r2.width = 4.5;
	r2.height = 1.5;

	Rectangle r3(41.2, 21.9);
	r3.width = 41.2;
	r3.height = 21.9;

	Circle r4(23.89);
	r4.radius = 23.89;

	Circle r5(47.2);
	r5.radius = 47.2;

	r.push_back(r1);
	r.push_back(r2);
	r.push_back(r3);

	c.push_back(r4);
	c.push_back(r5);

	for (int i = 0; i < r.size(); i++){
		cout << r[i].getArea() << endl;
		cout << r[i].getPerimeter() << endl;
	}
	
	for (int j = 0; j < c.size(); j++) {
		cout << c[j].getArea() << endl;
		cout << c[j].getPerimeter() << endl;
	}

	system("pause");
	return 0;
}

